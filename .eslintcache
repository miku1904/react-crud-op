[{"E:\\react\\react-crud-op\\src\\index.js":"1","E:\\react\\react-crud-op\\src\\App.js":"2","E:\\react\\react-crud-op\\src\\comp\\TableList.js":"3","E:\\react\\react-crud-op\\src\\comp\\FormModal.js":"4","E:\\react\\react-crud-op\\src\\comp\\EditModal.js":"5","E:\\react\\react-crud-op\\src\\comp\\SearchBar.js":"6","E:\\react\\react-crud-op\\src\\comp\\Notification.js":"7"},{"size":173,"mtime":1655921704089,"results":"8","hashOfConfig":"9"},{"size":258,"mtime":1655921704085,"results":"10","hashOfConfig":"9"},{"size":11199,"mtime":1655929030377,"results":"11","hashOfConfig":"9"},{"size":7266,"mtime":1655921704087,"results":"12","hashOfConfig":"9"},{"size":8313,"mtime":1655928538513,"results":"13","hashOfConfig":"9"},{"size":736,"mtime":1655921704088,"results":"14","hashOfConfig":"9"},{"size":804,"mtime":1655921704087,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13g5fxg",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\react\\react-crud-op\\src\\index.js",[],"E:\\react\\react-crud-op\\src\\App.js",[],"E:\\react\\react-crud-op\\src\\comp\\TableList.js",["31","32","33","34","35","36"],"import * as React from 'react';\r\nimport \"../App.css\"\r\nimport { styled, StyledEngineProvider } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n// import { Pagination, TablePagination } from '@mui/material';\r\nimport { useState, useEffect } from 'react';\r\n// import Home from './Home';\r\nimport FormModel from './FormModal';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\nimport Notification from './Notification';\r\nimport EditModal from './EditModal';\r\nimport SearchBar from './SearchBar';\r\n// import TablePagination from './TablePagination';\r\nimport Pagination from './Pagination'\r\n// import AccordionData from './Accordion'\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport Typography from '@mui/material/Typography';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n// import { Accordion } from '@mui/material';\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n    border: 2\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '&:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  '&:last-child td, &:last-child th': {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nconst TableList = () => {\r\n  const [rows, setRows] = useState([])\r\n  const [filterData, setFilterData] = useState([])\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  // For Edit Model\r\n  const [openEditModel, setOpenEditModel] = React.useState(false);\r\n  const handleOpenEditModel = () => setOpenEditModel(true);\r\n  const handleCloseEditModel = () => setOpenEditModel(false);\r\n  const [name, setName] = useState(\"\")\r\n\r\n  const [data, setData] = useState([])\r\n  // const [loading, setLoading] = useState(true);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [recordsPerPage] = useState(3);\r\n\r\n  const [expand, setExpand] = useState(true);\r\n  const toggleAcordion = () => {\r\n    setExpand(false);\r\n  };\r\n\r\n  const indexOfLastRecord = currentPage * recordsPerPage;\r\n  const indexOfFirstRecord = indexOfLastRecord - recordsPerPage;\r\n  const currentRecords = data.slice(indexOfFirstRecord, indexOfLastRecord);\r\n  const nPages = Math.ceil(data.length / recordsPerPage)\r\n\r\n\r\n  const getData = () => {\r\n    try {\r\n      let data = JSON.parse(localStorage.getItem(\"data\"))\r\n      if (data) {\r\n        if (data.length > 0) {\r\n          setRows(data)\r\n          setFilterData(data)\r\n          setData(data)\r\n        }\r\n      } else {\r\n        let arr = new Array()\r\n        localStorage.setItem(\"data\", JSON.stringify(arr))\r\n      }\r\n    }\r\n    catch {\r\n      console.log(\"\")\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  const addData = (data) => {\r\n    let newData = JSON.parse(localStorage.getItem(\"data\"))\r\n    newData.push(data)\r\n    localStorage.setItem(\"data\", JSON.stringify(newData))\r\n    getData()\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Data submitted successfully.\",\r\n      type: \"success\",\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const deleteItem = (name) => {\r\n    // console.log(name,\"name\")\r\n    const filteredData = rows.filter((item) => item.name !== name);\r\n    localStorage.setItem(\"data\", JSON.stringify(filteredData))\r\n    setRows(filteredData)\r\n    setFilterData(filteredData)\r\n    setData(filteredData)\r\n    setNotify({\r\n      isOpen: true,\r\n      message: `${name} is deleted successfully`,\r\n      type: \"error\",\r\n    });\r\n  }\r\n\r\n  const updateItem = (data, name) => {\r\n    console.log(data, 'data')\r\n\r\n    var index = rows.findIndex((x) => x.name === name);\r\n    let newState = [...rows];\r\n    let tempobj = { ...newState[index] };\r\n\r\n    tempobj.name = data.name\r\n    tempobj.email = data.email\r\n    tempobj.gender = data.gender\r\n    tempobj.designation = data.designation\r\n    tempobj.skill = data.skill\r\n    tempobj.date = data.date\r\n    newState[index] = tempobj;\r\n    setRows(newState);\r\n    setFilterData(newState)\r\n    setData(newState)\r\n\r\n    localStorage.setItem('data', JSON.stringify(newState))\r\n  }\r\n\r\n  const editItem = (name) => {\r\n    setOpenEditModel(true)\r\n    setName(name)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (search.length > 0) {\r\n\r\n      let filtered_users = filterData.filter(function (user) {\r\n        user =\r\n          user.name.toLowerCase() +\r\n          user.email.toLowerCase() +\r\n          user.gender.toLowerCase();\r\n        return user.indexOf(search) > -1;\r\n      });\r\n      setRows(filtered_users)\r\n      setData(filtered_users)\r\n    }\r\n    else {\r\n      getData()\r\n    }\r\n  }, [search])\r\n\r\n  const date = (date) =>{\r\n    let dt = new Date(date)\r\n    return(dt.toLocaleDateString())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header1\">\r\n        <FormModel rows={rows} addData={addData} />\r\n        <SearchBar search={search} setSearch={setSearch} />\r\n      </div>\r\n      <TableContainer component={Paper} sx={{ width: 900, mt: 2, m: \"auto\" }} >\r\n\r\n\r\n        <Table sx={{ minWidth: 700, marginTop: 1 }} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {/* <StyledTableCell>Id</StyledTableCell> */}\r\n              <StyledTableCell align=\"center\">Name</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Email</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Gender</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Action</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody></TableBody>\r\n          </Table>\r\n            {currentRecords?.map((row, index) => (\r\n              <>\r\n\r\n                <Accordion>\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                  >\r\n                    {/* <Typography></Typography> */}\r\n                    <StyledTableRow key={row.name}>\r\n\r\n                      <StyledTableCell  style={{ width: 200 }} align=\"center\">{row.name}</StyledTableCell>\r\n                      <StyledTableCell style={{ width: 300 }} align=\"center\">{row.email}</StyledTableCell>\r\n                      <StyledTableCell style={{ width: 200 }} align=\"center\">{row.gender}</StyledTableCell>\r\n                      <StyledTableCell style={{ width: 250 }} align=\"center\">\r\n                        <IconButton aria-label=\"edit\" onClick={() => editItem(row.name)} color=\"primary\">\r\n                          <ModeEditIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"delete\" onClick={() => deleteItem(row.name)} color=\"primary\">\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"view\" color=\"primary\"><AddCircleIcon /></IconButton>\r\n                      </StyledTableCell>\r\n\r\n                    </StyledTableRow>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    {/* <Table>\r\n                          <TableBody>\r\n                            {rows.map((row) => (\r\n                              <TableRow key={row.name}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                  {row.name}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                                <TableCell align=\"right\">{row.fat}</TableCell>\r\n                                <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                                <TableCell align=\"right\">{row.protein}</TableCell>\r\n                              </TableRow>\r\n                            ))}\r\n                          </TableBody>\r\n                        </Table> */}\r\n                    <StyledTableRow key={row.name}>\r\n\r\n                      <StyledTableCell style={{ width: 300 }} align=\"center\">Designation</StyledTableCell>\r\n                      <StyledTableCell style={{ width: 300 }} align=\"center\">Skil</StyledTableCell>\r\n                      <StyledTableCell style={{ width: 300 }} align=\"center\">Date</StyledTableCell>\r\n                    </StyledTableRow>\r\n                    <StyledTableRow key={row.name}>\r\n\r\n                      <StyledTableCell style={{ width: 300 }} align=\"center\">{row.designation}</StyledTableCell>\r\n                      <StyledTableCell style={{ width: 300 }} align=\"center\">{row.skill}</StyledTableCell>\r\n                      <StyledTableCell style={{ width: 300 }} align=\"center\">{\r\n                      date(row.date)\r\n\r\n                      \r\n                      }</StyledTableCell>\r\n                    </StyledTableRow>\r\n                  </AccordionDetails>\r\n                </Accordion>``\r\n\r\n                {/* <StyledTableRow key={row.name}>\r\n\r\n                  <StyledTableCell align=\"center\">{row.name}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{row.email}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{row.gender}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">\r\n                    <IconButton aria-label=\"edit\" onClick={() => editItem(row.name)} color=\"primary\">\r\n                      <ModeEditIcon />\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"delete\" onClick={() => deleteItem(row.name)} color=\"primary\">\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"view\" color=\"primary\"><AddCircleIcon /></IconButton>\r\n                  </StyledTableCell>\r\n\r\n                </StyledTableRow> */}\r\n\r\n              </>\r\n            ))}\r\n        \r\n          \r\n        <EditModal\r\n          open={openEditModel}\r\n          setOpen={setOpenEditModel}\r\n          handleClose={handleCloseEditModel}\r\n          handleOpen={handleOpenEditModel}\r\n          name={name}\r\n          rows={rows}\r\n          updateItem={updateItem}\r\n        />\r\n        <Notification notify={notify} setNotify={setNotify} />\r\n        {/* <TablePagination/> */}\r\n        <Pagination\r\n          nPages={nPages}\r\n          currentPage={currentPage}\r\n          setCurrentPage={setCurrentPage}\r\n        />\r\n      </TableContainer>\r\n      {/* <AccordionData onClick={toggleAcordion} /> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TableList;\r\n\r\n","E:\\react\\react-crud-op\\src\\comp\\FormModal.js",["37","38","39","40","41","42","43","44","45"],"E:\\react\\react-crud-op\\src\\comp\\EditModal.js",["46","47","48","49","50","51","52","53","54","55","56","57","58","59"],"E:\\react\\react-crud-op\\src\\comp\\SearchBar.js",["60"],"E:\\react\\react-crud-op\\src\\comp\\Notification.js",[],{"ruleId":"61","severity":1,"message":"62","line":3,"column":18,"nodeType":"63","messageId":"64","endLine":3,"endColumn":38},{"ruleId":"61","severity":1,"message":"65","line":28,"column":8,"nodeType":"63","messageId":"64","endLine":28,"endColumn":18},{"ruleId":"61","severity":1,"message":"66","line":76,"column":10,"nodeType":"63","messageId":"64","endLine":76,"endColumn":16},{"ruleId":"61","severity":1,"message":"67","line":77,"column":9,"nodeType":"63","messageId":"64","endLine":77,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":97,"column":19,"nodeType":"70","messageId":"71","endLine":97,"endColumn":30},{"ruleId":"72","severity":1,"message":"73","line":185,"column":6,"nodeType":"74","endLine":185,"endColumn":14,"suggestions":"75"},{"ruleId":"61","severity":1,"message":"76","line":1,"column":27,"nodeType":"63","messageId":"64","endLine":1,"endColumn":36},{"ruleId":"61","severity":1,"message":"77","line":21,"column":3,"nodeType":"63","messageId":"64","endLine":21,"endColumn":21},{"ruleId":"61","severity":1,"message":"78","line":51,"column":10,"nodeType":"63","messageId":"64","endLine":51,"endColumn":14},{"ruleId":"61","severity":1,"message":"79","line":51,"column":16,"nodeType":"63","messageId":"64","endLine":51,"endColumn":23},{"ruleId":"61","severity":1,"message":"80","line":59,"column":10,"nodeType":"63","messageId":"64","endLine":59,"endColumn":14},{"ruleId":"61","severity":1,"message":"81","line":59,"column":15,"nodeType":"63","messageId":"64","endLine":59,"endColumn":22},{"ruleId":"82","severity":1,"message":"83","line":65,"column":21,"nodeType":"84","messageId":"85","endLine":65,"endColumn":23},{"ruleId":"86","severity":1,"message":"87","line":66,"column":23,"nodeType":"88","messageId":"89","endLine":66,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":71,"column":15,"nodeType":"88","messageId":"89","endLine":71,"endColumn":17},{"ruleId":"61","severity":1,"message":"77","line":21,"column":3,"nodeType":"63","messageId":"64","endLine":21,"endColumn":21},{"ruleId":"61","severity":1,"message":"78","line":52,"column":10,"nodeType":"63","messageId":"64","endLine":52,"endColumn":14},{"ruleId":"61","severity":1,"message":"79","line":52,"column":16,"nodeType":"63","messageId":"64","endLine":52,"endColumn":23},{"ruleId":"61","severity":1,"message":"90","line":54,"column":9,"nodeType":"63","messageId":"64","endLine":54,"endColumn":16},{"ruleId":"61","severity":1,"message":"91","line":55,"column":9,"nodeType":"63","messageId":"64","endLine":55,"endColumn":19},{"ruleId":"61","severity":1,"message":"92","line":63,"column":52,"nodeType":"63","messageId":"64","endLine":63,"endColumn":60},{"ruleId":"82","severity":1,"message":"83","line":82,"column":23,"nodeType":"84","messageId":"85","endLine":82,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":83,"column":23,"nodeType":"88","messageId":"89","endLine":83,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":88,"column":26,"nodeType":"88","messageId":"89","endLine":88,"endColumn":28},{"ruleId":"72","severity":1,"message":"93","line":101,"column":6,"nodeType":"74","endLine":101,"endColumn":13,"suggestions":"94"},{"ruleId":"86","severity":1,"message":"87","line":106,"column":23,"nodeType":"88","messageId":"89","endLine":106,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":106,"column":53,"nodeType":"88","messageId":"89","endLine":106,"endColumn":55},{"ruleId":"86","severity":1,"message":"87","line":111,"column":29,"nodeType":"88","messageId":"89","endLine":111,"endColumn":31},{"ruleId":"86","severity":1,"message":"87","line":111,"column":61,"nodeType":"88","messageId":"89","endLine":111,"endColumn":63},{"ruleId":"61","severity":1,"message":"95","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":18},"no-unused-vars","'StyledEngineProvider' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'expand' is assigned a value but never used.","'toggleAcordion' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterData'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'useEffect' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setOpen' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'setError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["97"],"'useState' is defined but never used.",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [filterData, search]",{"range":"102","text":"103"},"Update the dependencies array to be: [props, setValue]",{"range":"104","text":"105"},[5380,5388],"[filterData, search]",[2406,2413],"[props, setValue]"]