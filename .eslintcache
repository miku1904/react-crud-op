[{"E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\index.js":"1","E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\App.js":"2","E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\comp\\TableList.js":"3","E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\comp\\Notification.js":"4","E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\comp\\EditModal.js":"5","E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\comp\\TablePagination.js":"6","E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\comp\\FormModal.js":"7","E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\comp\\SearchBar.js":"8","E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\comp\\Pagination.js":"9","E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\comp\\Accordion.js":"10"},{"size":167,"mtime":1655841208000,"results":"11","hashOfConfig":"12"},{"size":244,"mtime":1655841208000,"results":"13","hashOfConfig":"12"},{"size":7573,"mtime":1655902729152,"results":"14","hashOfConfig":"12"},{"size":774,"mtime":1655841208000,"results":"15","hashOfConfig":"12"},{"size":6990,"mtime":1655841208000,"results":"16","hashOfConfig":"12"},{"size":337,"mtime":1655890094906,"results":"17","hashOfConfig":"12"},{"size":7012,"mtime":1655841208000,"results":"18","hashOfConfig":"12"},{"size":711,"mtime":1655841208000,"results":"19","hashOfConfig":"12"},{"size":1565,"mtime":1655841208000,"results":"20","hashOfConfig":"12"},{"size":818,"mtime":1655903328762,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1mlow6i",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\index.js",[],["47","48"],"E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\App.js",[],"E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\comp\\TableList.js",["49","50","51","52","53","54","55","56","57"],"E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\comp\\Notification.js",[],"E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\comp\\EditModal.js",["58","59","60","61","62","63","64","65","66"],"import React, { useState, useEffect } from \"react\";\nimport Box from '@mui/material/Box';\n\nimport Modal from '@mui/material/Modal';\n\nimport {\n  TextField,\n  FormControlLabel,\n  FormLabel,\n  FormControl,\n  FormHelperText,\n  RadioGroup,\n  Radio,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n} from \"@material-ui/core\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Notification from \"./Notification\";\n\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 500,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n\n};\nconst useStyles = makeStyles((theme) => ({\n  inputField: {\n    width: \"100%\",\n    margin: theme.spacing(1, 0),\n  },\n}));\n\n\nconst EditModal = (props) => {\n  const [data, setData] = useState([]);\n  const open = props.open\n  const setOpen = props.setOpen\n  const handleOpen = props.handleOpen\n  const handleClose = props.handleClose\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n  const classes = useStyles();\n  const { register, handleSubmit, control, errors, setError, setValue } = useForm();\n  const onSubmit = (data) => {\n\n    handleClose()\n    props.updateItem(data, props.name)\n\n  }\n\n\n  useEffect(() => {\n\n    setTimeout(() => {\n\n      const name = props.name\n      let data = JSON.parse(localStorage.getItem('data'))\n      data.map((item) => {\n        if (item.name == name) {\n          \n          setValue(\"name\", item.name)\n          setValue(\"email\", item.email)\n          setValue(\"gender\", item.gender)\n          \n          setValue(\"designation\", item.designation)\n          setValue(\"date\", item.date)\n          setValue(\"skill\", item.skill)\n          console.log(item, \"name\")\n        }\n      })\n    }, 500);\n  }, [props])\n\n\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n\n      >\n        <Box sx={style}>\n          Edit model\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n\n            <TextField\n              placeholder=\"Enter Your First Name\"\n              label=\"name\"\n              variant=\"outlined\"\n              fullWidth\n              className={classes.inputField}\n              name=\"name\"\n              inputRef={register({\n                required: \"Name is required.\",\n              })}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              error={Boolean(errors.name)}\n              helperText={errors.name?.message}\n            />\n\n\n            <TextField\n              placeholder=\"Enter Your E-mail Address\"\n              label=\"E-mail\"\n              variant=\"outlined\"\n              fullWidth\n              className={classes.inputField}\n              name=\"email\"\n              inputRef={register({\n                required: \"E-mail Address is required.\",\n              })}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              error={Boolean(errors.email)}\n              helperText={errors.email?.message}\n            />\n\n\n            <FormControl\n              className={classes.inputField}\n              error={Boolean(errors.gender)}\n            >\n              <FormLabel>Choose Your Gender</FormLabel>\n              <RadioGroup row name=\"gender\">\n                <FormControlLabel\n                  value=\"female\"\n                  control={\n                    <Radio\n                      inputRef={register}\n                    />\n                  }\n                 \n                  label=\"Female\"\n                />\n                <FormControlLabel\n                  value=\"male\"\n                  control={\n                    <Radio\n                      inputRef={register}\n                    />\n                  }\n                  label=\"Male\"\n                />\n              </RadioGroup>\n              <FormHelperText>{errors.gender?.message}</FormHelperText>\n            </FormControl>\n\n            <FormControl\n              fullWidth\n              className={classes.inputField}\n              error={Boolean(errors.designation)}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            >\n              <InputLabel id=\"demo-simple-select-label\">\n                Select Your Designation\n              </InputLabel>\n              <Controller\n                render={(props) => (\n                  <Select value={props.value} onChange={props.onChange}>\n                    <MenuItem value={\"Trainee\"}>Trainee</MenuItem>\n                    <MenuItem value={\"Junior devloper\"}>Junior devloper</MenuItem>\n                    <MenuItem value={\"senior developer\"}>Sinior devloper</MenuItem>\n                  </Select>\n                )}\n                name=\"designation\"\n                control={control}\n                defaultValue=\"\"\n                rules={{\n                  required: \"please choose your Designation\",\n                }}\n              />\n              <FormHelperText>{errors.course?.message}</FormHelperText>\n            </FormControl>\n\n            <TextField\n              placeholder=\"Enter Your skill\"\n              label=\"skill\"\n              variant=\"outlined\"\n              fullWidth\n              InputLabelProps={{\n                shrink: true,\n              }}\n              className={classes.inputField}\n              name=\"skill\"\n              inputRef={register({\n                required: \"skill is required.\",\n              })}\n              error={Boolean(errors.skill)}\n              helperText={errors.skill?.message}\n            />\n\n\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n              <Controller\n                render={(props) => (\n                  <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    label=\"Date\"\n                    value={props.value}\n                    onChange={props.onChange}\n                    fullWidth\n                    error={Boolean(errors.date)}\n                    helperText={errors.date?.message}\n                  />\n                )}\n                name=\"date\"\n                defaultValue={null}\n                control={control}\n                rules={{\n                  required: \"Date is required.\",\n                }}\n              />\n\n\n\n            </MuiPickersUtilsProvider>\n\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </form>\n        </Box>\n      </Modal>\n      <Notification notify={notify} setNotify={setNotify} />\n    </>\n  );\n};\n\nexport default EditModal;\n","E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\comp\\TablePagination.js",[],"E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\comp\\FormModal.js",["67","68","69","70","71","72","73","74","75"],"import React, { useState, useEffect } from \"react\";\nimport Box from '@mui/material/Box';\n\nimport Modal from '@mui/material/Modal';\n\nimport {\n  TextField,\n  FormControlLabel,\n  FormLabel,\n  FormControl,\n  FormHelperText,\n  RadioGroup,\n  Radio,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n} from \"@material-ui/core\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Notification from \"./Notification\";\n\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 500,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n\n};\nconst useStyles = makeStyles((theme) => ({\n  inputField: {\n    width: \"100%\",\n    margin: theme.spacing(1, 0),\n  },\n}));\n\nconst FormModal = (props) => {\n  const [data, setData] = useState([]);\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n  const classes = useStyles();\n  const { register, handleSubmit, control, errors,  } = useForm();\n  const [name,setName] = useState(\"\")\n  const onSubmit = (data) => {\n    \n    if (data.name) {\n      let dt = props.rows\n      let err = false\n      dt.map((item) => {\n        if (item.name == data.name) {\n          err = true\n          // return\n        }\n      })\n      if (err == true) {\n       \n        setNotify({\n          isOpen: true,\n          message: \"Name already exiest.\",\n          type: \"error\",\n        });\n      } else {\n        handleClose()\n        props.addData(data)\n      }\n    }\n    // message(\"name\",\"This name already exiest\")\n  }\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n \n\n  return (\n    <>\n      <Button variant=\"contained\" onClick={handleOpen}>Add Employee</Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n\n            <TextField\n              placeholder=\"Enter Your First Name\"\n              label=\"name\"\n              variant=\"outlined\"\n              fullWidth\n              className={classes.inputField}\n              name=\"name\"\n              inputRef={register({\n                required: \"Name is required.\",\n              })}\n              error={Boolean(errors.name)}\n              helperText={errors.name?.message}\n              // value={name}\n              // onChange={(e)=>setName(e.target.value)}\n            />\n\n         \n            <TextField\n              placeholder=\"Enter Your E-mail Address\"\n              label=\"E-mail\"\n              variant=\"outlined\"\n              fullWidth\n              className={classes.inputField}\n              name=\"email\"\n              inputRef={register({\n                pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"invalid email address\"\n      }\n              })}\n              error={Boolean(errors.email)}\n              helperText={errors.email?.message}\n            />\n\n            {/* 4) TextField */}\n            <FormControl\n              className={classes.inputField}\n              error={Boolean(errors.gender)}\n            >\n              <FormLabel>Choose Your Gender</FormLabel>\n              <RadioGroup row name=\"gender\">\n                <FormControlLabel\n                  value=\"female\"\n                  control={\n                    <Radio\n                      inputRef={register({\n                        required: \"Choose your gender\",\n                      })}\n                    />\n                  }\n                  label=\"Female\"\n                />\n                <FormControlLabel\n                  value=\"male\"\n                  control={\n                    <Radio\n                      inputRef={register({\n                        required: \"Choose your gender\",\n                      })}\n                    />\n                  }\n                  label=\"Male\"\n                />\n              </RadioGroup>\n              <FormHelperText>{errors.gender?.message}</FormHelperText>\n            </FormControl>\n\n            <FormControl\n              fullWidth\n              className={classes.inputField}\n              error={Boolean(errors.designation)}\n            >\n              <InputLabel id=\"demo-simple-select-label\">\n                Select Your Designation\n              </InputLabel>\n              <Controller\n                render={(props) => (\n                  <Select value={props.value} onChange={props.onChange}>\n                    <MenuItem value={\"Trainee\"}>Trainee</MenuItem>\n                    <MenuItem value={\"Junior devloper\"}>Junior devloper</MenuItem>\n                    <MenuItem value={\"senior developer\"}>Sinior devloper</MenuItem>\n                  </Select>\n                )}\n                name=\"designation\"\n                control={control}\n                defaultValue=\"\"\n                rules={{\n                  required: \"please choose your Designation\",\n                }}\n              />\n              <FormHelperText>{errors.course?.message}</FormHelperText>\n            </FormControl>\n\n            <TextField\n              placeholder=\"Enter Your skill\"\n              label=\"skill\"\n              variant=\"outlined\"\n              fullWidth\n              className={classes.inputField}\n              name=\"skill\"\n              inputRef={register({\n                required: \"skill is required.\",\n              })}\n              error={Boolean(errors.skill)}\n              helperText={errors.skill?.message}\n            />\n\n\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              {/* 5) Date Picker */}\n              <Controller\n                render={(props) => (\n                  <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    label=\"Date\"\n                    value={props.value}\n                    onChange={props.onChange}\n                    fullWidth\n                    error={Boolean(errors.date)}\n                    helperText={errors.date?.message}\n                  />\n                )}\n                name=\"date\"\n                defaultValue={null}\n                control={control}\n                rules={{\n                  required: \"Date is required.\",\n                }}\n              />\n\n\n\n            </MuiPickersUtilsProvider>\n\n\n\n\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </form>\n        </Box>\n      </Modal>\n      <Notification notify={notify} setNotify={setNotify} />\n    </>\n  );\n};\n\nexport default FormModal;\n","E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\comp\\SearchBar.js",["76"],"import React from 'react'\nimport { useState } from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport TextField from \"@mui/material/TextField\";\n\nconst SearchBar = ({search,setSearch}) => (\n    <form>\n      <TextField\n        id=\"search-bar\"\n        className=\"text\"\n        onInput={(e) => {\n          setSearch(e.target.value);\n        }}\n        label=\"search here\"\n        variant=\"outlined\"\n        value={search}\n        placeholder=\"Search...\"\n        size=\"small\"\n      />\n      <IconButton type=\"submit\" aria-label=\"search\">\n        <SearchIcon style={{ fill: \"blue\" }} />\n      </IconButton>\n    </form>\n  );\nexport default SearchBar","E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\comp\\Pagination.js",["77","78","79","80"],"import React from 'react'\n\nconst Pagination = ({ nPages, currentPage, setCurrentPage }) => {\n\n    const pageNumbers = [...Array(nPages + 1).keys()].slice(1)\n\n    \n\n    const nextPage = () => {\n            if(currentPage !== nPages) setCurrentPage(currentPage + 1)\n    }\n    const prevPage = () => {\n        if(currentPage !== 1) setCurrentPage(currentPage - 1)\n    }\n    return (\n        <nav>\n            <ul className='pagination justify-content-center mt-3 float-right'>\n                <li className=\"page-item\">\n                    <a className=\"page-link\" \n                        onClick={prevPage} \n                        href='#'>\n                        \n                        Previous\n                    </a>\n                </li>\n                {pageNumbers.map(pgNumber => (\n                    <li key={pgNumber} \n                        className= {`page-item ${currentPage == pgNumber ? 'active' : ''} `} >\n\n                        <a onClick={() => setCurrentPage(pgNumber)}  \n                            className='page-link' \n                            href='#'>\n                            \n                            {pgNumber}\n                        </a>\n                    </li>\n                ))}\n                <li className=\"page-item\">\n                    <a className=\"page-link\" \n                        onClick={nextPage}\n                        href='#'>\n                        \n                        Next\n                    </a>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Pagination","E:\\Dharmik\\reactjs\\material-ui-rhf-validation\\src\\comp\\Accordion.js",["81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":3,"column":18,"nodeType":"88","messageId":"89","endLine":3,"endColumn":38},{"ruleId":"86","severity":1,"message":"90","line":22,"column":8,"nodeType":"88","messageId":"89","endLine":22,"endColumn":23},{"ruleId":"86","severity":1,"message":"91","line":25,"column":8,"nodeType":"88","messageId":"89","endLine":25,"endColumn":17},{"ruleId":"86","severity":1,"message":"92","line":26,"column":8,"nodeType":"88","messageId":"89","endLine":26,"endColumn":24},{"ruleId":"86","severity":1,"message":"93","line":27,"column":8,"nodeType":"88","messageId":"89","endLine":27,"endColumn":24},{"ruleId":"86","severity":1,"message":"94","line":28,"column":8,"nodeType":"88","messageId":"89","endLine":28,"endColumn":18},{"ruleId":"86","severity":1,"message":"95","line":75,"column":10,"nodeType":"88","messageId":"89","endLine":75,"endColumn":16},{"ruleId":"96","severity":1,"message":"97","line":96,"column":19,"nodeType":"98","messageId":"99","endLine":96,"endColumn":30},{"ruleId":"100","severity":1,"message":"101","line":186,"column":6,"nodeType":"102","endLine":186,"endColumn":14,"suggestions":"103"},{"ruleId":"86","severity":1,"message":"104","line":21,"column":3,"nodeType":"88","messageId":"89","endLine":21,"endColumn":21},{"ruleId":"86","severity":1,"message":"105","line":52,"column":10,"nodeType":"88","messageId":"89","endLine":52,"endColumn":14},{"ruleId":"86","severity":1,"message":"106","line":52,"column":16,"nodeType":"88","messageId":"89","endLine":52,"endColumn":23},{"ruleId":"86","severity":1,"message":"107","line":54,"column":9,"nodeType":"88","messageId":"89","endLine":54,"endColumn":16},{"ruleId":"86","severity":1,"message":"108","line":55,"column":9,"nodeType":"88","messageId":"89","endLine":55,"endColumn":19},{"ruleId":"86","severity":1,"message":"109","line":63,"column":52,"nodeType":"88","messageId":"89","endLine":63,"endColumn":60},{"ruleId":"110","severity":1,"message":"111","line":78,"column":23,"nodeType":"112","messageId":"113","endLine":78,"endColumn":25},{"ruleId":"114","severity":1,"message":"115","line":79,"column":23,"nodeType":"116","messageId":"117","endLine":79,"endColumn":25},{"ruleId":"100","severity":1,"message":"118","line":92,"column":6,"nodeType":"102","endLine":92,"endColumn":13,"suggestions":"119"},{"ruleId":"86","severity":1,"message":"120","line":1,"column":27,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},{"ruleId":"86","severity":1,"message":"104","line":21,"column":3,"nodeType":"88","messageId":"89","endLine":21,"endColumn":21},{"ruleId":"86","severity":1,"message":"105","line":51,"column":10,"nodeType":"88","messageId":"89","endLine":51,"endColumn":14},{"ruleId":"86","severity":1,"message":"106","line":51,"column":16,"nodeType":"88","messageId":"89","endLine":51,"endColumn":23},{"ruleId":"86","severity":1,"message":"121","line":59,"column":10,"nodeType":"88","messageId":"89","endLine":59,"endColumn":14},{"ruleId":"86","severity":1,"message":"122","line":59,"column":15,"nodeType":"88","messageId":"89","endLine":59,"endColumn":22},{"ruleId":"110","severity":1,"message":"111","line":65,"column":21,"nodeType":"112","messageId":"113","endLine":65,"endColumn":23},{"ruleId":"114","severity":1,"message":"115","line":66,"column":23,"nodeType":"116","messageId":"117","endLine":66,"endColumn":25},{"ruleId":"114","severity":1,"message":"115","line":71,"column":15,"nodeType":"116","messageId":"117","endLine":71,"endColumn":17},{"ruleId":"86","severity":1,"message":"123","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":19,"column":21,"nodeType":"126","endLine":21,"endColumn":34},{"ruleId":"114","severity":1,"message":"115","line":28,"column":62,"nodeType":"116","messageId":"117","endLine":28,"endColumn":64},{"ruleId":"124","severity":1,"message":"125","line":30,"column":25,"nodeType":"126","endLine":32,"endColumn":38},{"ruleId":"124","severity":1,"message":"125","line":39,"column":21,"nodeType":"126","endLine":41,"endColumn":34},{"ruleId":"86","severity":1,"message":"123","line":1,"column":15,"nodeType":"88","messageId":"89","endLine":1,"endColumn":23},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'StyledEngineProvider' is defined but never used.","Identifier","unusedVar","'TablePagination' is defined but never used.","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'AccordionDetails' is defined but never used.","'Typography' is defined but never used.","'expand' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterData'. Either include it or remove the dependency array.","ArrayExpression",["129"],"'KeyboardTimePicker' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'setError' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["130"],"'useEffect' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [filterData, search]",{"range":"135","text":"136"},"Update the dependencies array to be: [props, setValue]",{"range":"137","text":"138"},[5164,5172],"[filterData, search]",[2016,2023],"[props, setValue]"]